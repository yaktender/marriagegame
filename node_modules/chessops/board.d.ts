import { Square, Color, Role, Piece } from './types';
import { SquareSet } from './squareSet';
export declare class Board implements Iterable<[Square, Piece]> {
    occupied: SquareSet;
    promoted: SquareSet;
    white: SquareSet;
    black: SquareSet;
    pawn: SquareSet;
    knight: SquareSet;
    bishop: SquareSet;
    rook: SquareSet;
    queen: SquareSet;
    king: SquareSet;
    private constructor();
    static default(): Board;
    static racingKings(): Board;
    static horde(): Board;
    reset(): void;
    static empty(): Board;
    clear(): void;
    clone(): Board;
    equalsIgnorePromoted(other: Board): boolean;
    equals(other: Board): boolean;
    getColor(square: Square): Color | undefined;
    getRole(square: Square): Role | undefined;
    get(square: Square): Piece | undefined;
    take(square: Square): Piece | undefined;
    set(square: Square, piece: Piece): Piece | undefined;
    has(square: Square): boolean;
    [Symbol.iterator](): Iterator<[Square, Piece]>;
    pieces(color: Color, role: Role): SquareSet;
    rooksAndQueens(): SquareSet;
    bishopsAndQueens(): SquareSet;
    kingOf(color: Color): Square | undefined;
}
